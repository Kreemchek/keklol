#from datetime import datetime, timedelta


from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
import app.keyboards as kb
from app.database.requests import set_user #register_purchase

router = Router()

@router.message(Command("start"))
async def send_welcome(message: Message):
    await set_user(tg_id=message.from_user.id, username=message.from_user.username)
    text = (
        "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n\n"
        "*–û –ß–ï–ú –ö–ê–ù–ê–õ?*\n\n"
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –∫–∞–∂–¥–æ–≥–æ, –∫—Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω –≤ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ! üòä\n"
        "–ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å–±–æ—Ä–∞ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∏ –≤–∑–∞–∏–º–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏. "
        "–û—á–∏—â–µ–Ω–∏–µ –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–º —É—Ä–æ–≤–Ω–µ —Ç–∞–∫ –∂–µ –≤–∞–∂–Ω–æ, –∫–∞–∫ –∏ –Ω–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º. –í–æ—Ç, –∫ –ø—Ä–∏–º–µ—Ä—É:\n"
        "- —Ç–æ—Å–∫–∞ ‚Äî —ç—Ç–æ *—Å–µ—Ä–¥—Ü–µ*,\n"
        "- –∑–∞–≤–∏—Å—Ç—å ‚Äî *—Å–µ–ª–µ–∑—ë–Ω–∫–∞*,\n"
        "- —Å—Ç—Ä–∞—Ö ‚Äî *–ø–æ—á–∫–∏* –∏ —Ç.–¥.\n\n"
        "*–≠–º–æ—Ü–∏—è –ø–æ—Ä–∞–∂–∞–µ—Ç –æ—Ä–≥–∞–Ω, –∞ –æ—Ä–≥–∞–Ω –ø–æ—Ä–æ–∂–¥–∞–µ—Ç —ç–º–æ—Ü–∏—é.*\n"
        "–ß–µ–ª–æ–≤–µ–∫, —Å–∞–º –Ω–µ –ø–æ–Ω–∏–º–∞—è, –Ω–∞—á–∏–Ω–∞–µ—Ç –∏—Å–ø—ã—Ç—ã–≤–∞—Ç—å —Ç–µ –∏–ª–∏ –∏–Ω—ã–µ —ç–º–æ—Ü–∏–∏. –≠—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Ç–æ–º—É, —á—Ç–æ —Ä–∞–Ω–µ–µ –æ–Ω –∏—Å–ø—ã—Ç—ã–≤–∞–ª –∏—Ö –ø–æ—Å—Ç–æ—è–Ω–Ω–æ.\n\n"
        "–ú–æ–∂–Ω–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä, –Ω–æ –æ—Ä–≥–∞–Ω–∞–º –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–º–æ—â—å ‚Äî *–æ—á–∏—â–µ–Ω–∏–µ*.\n\n"
        "–ò –ø–æ—Å–∫–æ–ª—å–∫—É —Ç–µ–ª–æ —Å–≤—è–∑–∞–Ω–æ —Å –ø—Å–∏—Ö–∏–∫–æ–π, –∫–∞–∂–¥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –Ω—É–∂–µ–Ω —á–µ–ª–æ–≤–µ–∫ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n"
        "–ó–¥–µ—Å—å —è –±—É–¥—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å. "
        "–ü–æ–º–∏–º–æ —ç—Ç–∞–ø–æ–≤ –æ—á–∏—â–µ–Ω–∏—è, –≤–∞—Å –∂–¥–µ—Ç –º–Ω–æ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –ø–æ–º–æ—â–∏ –¥—Ä—É–≥ –¥—Ä—É–≥—É, –∞ —Ç–∞–∫–∂–µ "
        "–º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, –∫–∞–∫ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –±–µ–∑ —Ç–∞–±–ª–µ—Ç–æ–∫ –∏ –≤—Ä–∞—á–µ–π. –í—ã –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ —è —â–µ–¥—Ä–∞ –Ω–∞ –∑–Ω–∞–Ω–∏—è! üòä\n\n"
        "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –±—É–¥–µ—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –æ—á–∏—â–µ–Ω–∏—è –∏ —á—Ç–æ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è, –∂–º–∏ ¬´–ü—Ä–æ—Ü–µ—Å—Å –æ—á–∏—â–µ–Ω–∏—è¬ª."
    )
    await message.answer(text, reply_markup=kb.process2)

@router.message(Command("help"))
async def help_handler(message: Message):
    await message.answer(
        "–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å, –æ–±—Ä–∞—â–∞–π—Å—è –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –Ø –≤—Å–µ–≥–¥–∞ —Ä–∞–¥–∞ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã: @Liana_gay"
    )

@router.callback_query(lambda c: c.data == "process2")
async def process2_handler(callback: CallbackQuery):
    text = (
        "*–ü–†–û–¶–ï–°–° –û–ß–ò–©–ï–ù–ò–Ø*\n\n"
        "¬´–†—ã–±–∞ –≥–Ω–∏–µ—Ç —Å –≥–æ–ª–æ–≤—ã, –∞ —á–∏—Å—Ç–∏—Ç—Å—è —Å —Ö–≤–æ—Å—Ç–∞¬ª\n\n"
        "–≠—Ç–∞–ø—ã –æ—á–∏—â–µ–Ω–∏—è:\n"
        "1. –¢–æ–ª—Å—Ç—ã–π –∫–∏—à–µ—á–Ω–∏–∫\n"
        "2. –¢–æ–Ω–∫–∏–π –∫–∏—à–µ—á–Ω–∏–∫\n"
        "3. –ü–æ—á–∫–∏\n"
        "4. –ü–µ—á–µ–Ω—å\n"
        "5. –ñ—ë–ª—á–Ω—ã–π –ø—É–∑—ã—Ä—å\n"
        "6. –ü–æ–¥–∂–µ–ª—É–¥–æ—á–Ω–∞—è –∂–µ–ª–µ–∑–∞\n"
        "7. –°–µ–ª–µ–∑—ë–Ω–∫–∞\n"
        "8. –ñ–µ–ª—É–¥–æ–∫\n"
        "9. –ë—Ä–æ–Ω—Ö–æ–ª—ë–≥–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n"
        "10. –°–µ—Ä–¥—Ü–µ\n"
        "11. –ì–æ–ª–æ–≤–Ω–æ–π –º–æ–∑–≥\n"
        "12. –°–æ—Å—É–¥—ã\n\n"
        "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –ü–∞—Ä–∞–∑–∏—Ç–∞—Ä–Ω–æ–µ –æ—á–∏—â–µ–Ω–∏–µ\n\n"
        "–û—á–∏—â–µ–Ω–∏–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ –ø—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤, –ø–ª—é—Å-–º–∏–Ω—É—Å. –û–Ω–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —Ç–µ—Ö, –∫—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—á–∏—â–∞–ª—Å—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ. "
        "(–í –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∑–Ω–∞–Ω–∏—è –∏ –ø–æ–º–æ–≥–∞—Ç—å –æ—Ä–≥–∞–Ω–∞–º –æ—á–∏—â–∞—Ç—å—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ.)\n\n"
        "–û—á–∏—â–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —Ç—Ä–∞–≤, –º–∞—Å–µ–ª, –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è –∏ –æ—á–∏—Å—Ç–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π. "
        "–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—Ç—å ‚Äî –±—É–¥—É –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å."
    )
    await callback.message.answer(text, reply_markup=kb.faq)


@router.callback_query(lambda c: c.data == "faq")
async def faq_handler(callback: CallbackQuery):
    text = (
        "*–ß–ê–°–¢–´–ï –í–û–ü–†–û–°–´ –∏ –ú–ò–§–´:*\n\n"
        "1. *–¢—Ä–∞–≤—ã –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –∞–ª–ª–µ—Ä–≥–∏—é.*\n"
        "- –î–∞, —ç—Ç–æ –≤–µ—Ä–Ω–æ. –ê–ª–ª–µ—Ä–≥–∏—è - —ç—Ç–æ –æ—Å—Ç—Ä–∞—è —Ñ–∞–∑–∞ –æ—á–∏—â–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –æ—Ç —à–ª–∞–∫–æ–≤ –∏ —Ç–æ–∫—Å–∏–Ω–æ–≤. "
        "–û—Ä–≥–∞–Ω–∏–∑–º —á–∏—Å—Ç–∏—Ç—Å—è —á–µ—Ä–µ–∑ –ø—Ä–∏—Ä–æ–¥—É (—Ü–≤–µ—Ç–µ–Ω–∏–µ, –∂–∏–≤–æ—Ç–Ω—ã–µ, –ø—Ä–æ–¥—É–∫—Ç—ã).\n\n"
        "2. *–ü–∏—Ç—å –º–Ω–æ–≥–æ –≤–æ–¥—ã –Ω–µ–ª—å–∑—è, –ø–æ—Å—Ç—Ä–∞–¥–∞—é—Ç –ø–æ—á–∫–∏.*\n"
        "- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–∏—Ç—å–µ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞ - —ç—Ç–æ –ø—Ä–∏–≤—ã—á–∫–∞, –∞ –ª—é–±—É—é –ø—Ä–∏–≤—ã—á–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–æ–¥–∏—Ç—å –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ. "
        "–ü–æ—ç—Ç–æ–º—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–∏—Ç—å –±–æ–ª—å—à–µ –≤–æ–¥—ã, –Ω—É–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ.\n\n"
        "3. *–ö–ª–∏–∑–º—ã –≤—Ä–µ–¥–Ω—ã –¥–ª—è –∫–∏—à–µ—á–Ω–∏–∫–∞.*\n"
        "- –ö–ª–∏–∑–º—ã –≤—Ä–µ–¥–Ω—ã –¥–ª—è —Ç–æ–Ω–∫–æ–≥–æ –∫–∏—à–µ—á–Ω–∏–∫–∞, —Ç–∞–∫ –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç–∞–º –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ª–∞–∫—Ç–æ- –∏ –±–∏—Ñ–∏–¥–æ–±–∞–∫—Ç–µ—Ä–∏–∏. "
        "–¢–æ–Ω–∫–∏–π –∫–∏—à–µ—á–Ω–∏–∫ –∑–∞—â–∏—â–µ–Ω –∏–ª–µ–æ—Ü–µ–∫–∞–ª—å–Ω—ã–º –∫–ª–∞–ø–∞–Ω–æ–º. –¢–æ–ª—Å—Ç—ã–π –∫–∏—à–µ—á–Ω–∏–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —á–∏—Å—Ç–∏—Ç—å —Ç–∞–∫ –∂–µ, –∫–∞–∫ –º—ã —á–∏—Å—Ç–∏–º –∑—É–±—ã.\n\n"
        "4. *–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–¥—Ü–µ–º, —Å—Ç—Ä–µ—Å—Å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω.*\n"
        "- –°–µ—Ä–¥–µ—á–Ω–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ –ø–ª–æ—Ö–∞—è –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å —Å–æ—Å—É–¥–æ–≤. –° —Å–µ—Ä–¥—Ü–µ–º —Å–≤—è–∑–∞–Ω—ã –≤—Å–µ –æ—Ä–≥–∞–Ω—ã. "
        "–ü–æ—á–∏—Å—Ç–∏–≤ –æ—Ä–≥–∞–Ω—ã –∏ —Å–æ—Å—É–¥—ã, –≤–∞—à–µ —Å–µ—Ä–¥—Ü–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —á–∞—Å–∏–∫–∏.\n\n"
        "5. *–ö–∞–∫–∏–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è?*\n"
        "- –ù–∞–ª–∏—á–∏–µ —Å—Ç—Ä–∞—Ö–∞, –Ω–µ–¥–æ–≤–µ—Ä–∏–µ, –Ω–µ–∂–µ–ª–∞–Ω–∏–µ –æ—á–∏—Å—Ç–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.\n"
        "- –û—Å—Ç—Ä–∞—è —Ñ–∞–∑–∞ –ª—é–±–æ–≥–æ –Ω–µ–¥—É–≥–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.\n"
        "- –ü–æ—Å—Ç—Ç–æ–∫—Å–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —è–¥–æ–≤ (–∞–ª–∫–æ–≥–æ–ª—å, –Ω–∞—Ä–∫–æ—Ç–∏–∫–∏, —Å—Ç–∏–º—É–ª—è—Ç–æ—Ä—ã, —Ñ–∞—Ä–º–∞–∫–æ—Ö–∏–º–∏—è –∏ –¥—Ä—É–≥–∏–µ —Ç–æ–∫—Å–∏–Ω—ã).\n\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –∂–º–∏ *\"–ù–∞—á–∞—Ç—å –æ—á–∏—â–µ–Ω–∏–µ\"*. –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ –Ω–∏—Ö –æ—Ç–≤–µ—á—É."
    )
    await callback.message.answer(text, reply_markup=kb.join_ask)

@router.callback_query(lambda c: c.data == "join")
async def join_handler(callback: CallbackQuery):
    text = (
        "*–ù–ê–ß–ê–¢–¨ –û–ß–ò–©–ï–ù–ò–ï*\n\n"
        "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è, –Ω–æ –ø–æ—Å–ª–µ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä. "
        "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –µ–∂–µ–º–µ—Å—è—á–Ω–æ –∏–ª–∏ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—Ä–∞–∑—É –∑–∞ –≤–µ—Å—å –∫—É—Ä—Å –æ—á–∏—â–µ–Ω–∏—è.\n\n"
        "*–í—ã–±–æ—Ä –∑–∞ –≤–∞–º–∏!*"
    )
    await callback.message.answer(text, reply_markup=kb.money)

#@router.callback_query(lambda c: c.data in ['six'])
#async def handle_purchase(callback: CallbackQuery):
   # text = (
   #     "–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –¥–æ–±–∏—Ç—å—Å—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤? –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–µ—Å—è—á–Ω–æ–º—É –∏–ª–∏ –≥–æ–¥–æ–≤–æ–º—É –ø–ª–∞–Ω—É –∏ –Ω–∞—á–Ω–∏—Ç–µ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É"
    #)
 #   await callback.message.answer(text, reply_markup=kb.money)

#@router.callback_query(lambda c: c.data in ['six', 'sixteen'])
#async def handle_purchase(callback: CallbackQuery):
    #tg_id = callback.from_user.id
    #username = callback.from_user.username
   # #amount = 650 if callback.data == 'six' else 6000

    #await set_user(tg_id=tg_id, username=username)
    #await register_purchase(tg_id, amount)

    #if amount == 650:
     #   message_text = (
      #      "–í—ã –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ 650 —Ä—É–±–ª–µ–π –Ω–∞ –º–µ—Å—è—Ü.\n"
       #     "–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ " + (datetime.now() + timedelta(days=30)).strftime("%d.%m.%Y")
        #)
    #else:
     #   message_text = "–í—ã –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ 6000 —Ä—É–±–ª–µ–π. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!"

    #await callback.message.answer(message_text)